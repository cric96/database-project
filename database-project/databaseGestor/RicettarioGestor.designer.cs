#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace database_project.databaseGestor
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Ricettario")]
	public partial class RicettarioGestorDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definizioni metodo Extensibility
    partial void OnCreated();
    partial void InsertAlternativo(Alternativo instance);
    partial void UpdateAlternativo(Alternativo instance);
    partial void DeleteAlternativo(Alternativo instance);
    partial void InsertAssemblaggio(Assemblaggio instance);
    partial void UpdateAssemblaggio(Assemblaggio instance);
    partial void DeleteAssemblaggio(Assemblaggio instance);
    partial void InsertCaratteristica(Caratteristica instance);
    partial void UpdateCaratteristica(Caratteristica instance);
    partial void DeleteCaratteristica(Caratteristica instance);
    partial void InsertCaratterizzante(Caratterizzante instance);
    partial void UpdateCaratterizzante(Caratterizzante instance);
    partial void DeleteCaratterizzante(Caratterizzante instance);
    partial void InsertCategoria(Categoria instance);
    partial void UpdateCategoria(Categoria instance);
    partial void DeleteCategoria(Categoria instance);
    partial void InsertConsumo(Consumo instance);
    partial void UpdateConsumo(Consumo instance);
    partial void DeleteConsumo(Consumo instance);
    partial void InsertIngrediente(Ingrediente instance);
    partial void UpdateIngrediente(Ingrediente instance);
    partial void DeleteIngrediente(Ingrediente instance);
    partial void InsertIngrUDM(IngrUDM instance);
    partial void UpdateIngrUDM(IngrUDM instance);
    partial void DeleteIngrUDM(IngrUDM instance);
    partial void InsertMenù(Menù instance);
    partial void UpdateMenù(Menù instance);
    partial void DeleteMenù(Menù instance);
    partial void InsertPortata(Portata instance);
    partial void UpdatePortata(Portata instance);
    partial void DeletePortata(Portata instance);
    partial void InsertRicetta(Ricetta instance);
    partial void UpdateRicetta(Ricetta instance);
    partial void DeleteRicetta(Ricetta instance);
    partial void InsertRicettaStrumento(RicettaStrumento instance);
    partial void UpdateRicettaStrumento(RicettaStrumento instance);
    partial void DeleteRicettaStrumento(RicettaStrumento instance);
    partial void InsertStep(Step instance);
    partial void UpdateStep(Step instance);
    partial void DeleteStep(Step instance);
    partial void InsertStrumento(Strumento instance);
    partial void UpdateStrumento(Strumento instance);
    partial void DeleteStrumento(Strumento instance);
    partial void InsertUnitàDiMisura(UnitàDiMisura instance);
    partial void UpdateUnitàDiMisura(UnitàDiMisura instance);
    partial void DeleteUnitàDiMisura(UnitàDiMisura instance);
    partial void InsertUso(Uso instance);
    partial void UpdateUso(Uso instance);
    partial void DeleteUso(Uso instance);
    partial void InsertUtilizzo(Utilizzo instance);
    partial void UpdateUtilizzo(Utilizzo instance);
    partial void DeleteUtilizzo(Utilizzo instance);
    #endregion
		
		public RicettarioGestorDataContext() : 
				base(global::database_project.Properties.Settings.Default.RicettarioConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public RicettarioGestorDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RicettarioGestorDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RicettarioGestorDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RicettarioGestorDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Alternativo> Alternativo
		{
			get
			{
				return this.GetTable<Alternativo>();
			}
		}
		
		public System.Data.Linq.Table<Assemblaggio> Assemblaggio
		{
			get
			{
				return this.GetTable<Assemblaggio>();
			}
		}
		
		public System.Data.Linq.Table<Caratteristica> Caratteristica
		{
			get
			{
				return this.GetTable<Caratteristica>();
			}
		}
		
		public System.Data.Linq.Table<Caratterizzante> Caratterizzante
		{
			get
			{
				return this.GetTable<Caratterizzante>();
			}
		}
		
		public System.Data.Linq.Table<Categoria> Categoria
		{
			get
			{
				return this.GetTable<Categoria>();
			}
		}
		
		public System.Data.Linq.Table<Consumo> Consumo
		{
			get
			{
				return this.GetTable<Consumo>();
			}
		}
		
		public System.Data.Linq.Table<Ingrediente> Ingrediente
		{
			get
			{
				return this.GetTable<Ingrediente>();
			}
		}
		
		public System.Data.Linq.Table<IngrUDM> IngrUDM
		{
			get
			{
				return this.GetTable<IngrUDM>();
			}
		}
		
		public System.Data.Linq.Table<Menù> Menù
		{
			get
			{
				return this.GetTable<Menù>();
			}
		}
		
		public System.Data.Linq.Table<Portata> Portata
		{
			get
			{
				return this.GetTable<Portata>();
			}
		}
		
		public System.Data.Linq.Table<Ricetta> Ricetta
		{
			get
			{
				return this.GetTable<Ricetta>();
			}
		}
		
		public System.Data.Linq.Table<RicettaStrumento> RicettaStrumento
		{
			get
			{
				return this.GetTable<RicettaStrumento>();
			}
		}
		
		public System.Data.Linq.Table<Step> Step
		{
			get
			{
				return this.GetTable<Step>();
			}
		}
		
		public System.Data.Linq.Table<Strumento> Strumento
		{
			get
			{
				return this.GetTable<Strumento>();
			}
		}
		
		public System.Data.Linq.Table<UnitàDiMisura> UnitàDiMisura
		{
			get
			{
				return this.GetTable<UnitàDiMisura>();
			}
		}
		
		public System.Data.Linq.Table<Uso> Uso
		{
			get
			{
				return this.GetTable<Uso>();
			}
		}
		
		public System.Data.Linq.Table<Utilizzo> Utilizzo
		{
			get
			{
				return this.GetTable<Utilizzo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Alternativo")]
	public partial class Alternativo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AltIdIngrediente;
		
		private int _idIngrediente;
		
		private EntityRef<Ingrediente> _Ingrediente;
		
		private EntityRef<Ingrediente> _Ingrediente1;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAltIdIngredienteChanging(int value);
    partial void OnAltIdIngredienteChanged();
    partial void OnidIngredienteChanging(int value);
    partial void OnidIngredienteChanged();
    #endregion
		
		public Alternativo()
		{
			this._Ingrediente = default(EntityRef<Ingrediente>);
			this._Ingrediente1 = default(EntityRef<Ingrediente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AltIdIngrediente", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AltIdIngrediente
		{
			get
			{
				return this._AltIdIngrediente;
			}
			set
			{
				if ((this._AltIdIngrediente != value))
				{
					if (this._Ingrediente1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAltIdIngredienteChanging(value);
					this.SendPropertyChanging();
					this._AltIdIngrediente = value;
					this.SendPropertyChanged("AltIdIngrediente");
					this.OnAltIdIngredienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idIngrediente", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idIngrediente
		{
			get
			{
				return this._idIngrediente;
			}
			set
			{
				if ((this._idIngrediente != value))
				{
					if (this._Ingrediente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidIngredienteChanging(value);
					this.SendPropertyChanging();
					this._idIngrediente = value;
					this.SendPropertyChanged("idIngrediente");
					this.OnidIngredienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ingrediente_Alternativo", Storage="_Ingrediente", ThisKey="idIngrediente", OtherKey="idIngrediente", IsForeignKey=true)]
		public Ingrediente Ingrediente
		{
			get
			{
				return this._Ingrediente.Entity;
			}
			set
			{
				Ingrediente previousValue = this._Ingrediente.Entity;
				if (((previousValue != value) 
							|| (this._Ingrediente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ingrediente.Entity = null;
						previousValue.Alternativo.Remove(this);
					}
					this._Ingrediente.Entity = value;
					if ((value != null))
					{
						value.Alternativo.Add(this);
						this._idIngrediente = value.idIngrediente;
					}
					else
					{
						this._idIngrediente = default(int);
					}
					this.SendPropertyChanged("Ingrediente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ingrediente_Alternativo1", Storage="_Ingrediente1", ThisKey="AltIdIngrediente", OtherKey="idIngrediente", IsForeignKey=true)]
		public Ingrediente Ingrediente1
		{
			get
			{
				return this._Ingrediente1.Entity;
			}
			set
			{
				Ingrediente previousValue = this._Ingrediente1.Entity;
				if (((previousValue != value) 
							|| (this._Ingrediente1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ingrediente1.Entity = null;
						previousValue.Alternativo1.Remove(this);
					}
					this._Ingrediente1.Entity = value;
					if ((value != null))
					{
						value.Alternativo1.Add(this);
						this._AltIdIngrediente = value.idIngrediente;
					}
					else
					{
						this._AltIdIngrediente = default(int);
					}
					this.SendPropertyChanged("Ingrediente1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Assemblaggio")]
	public partial class Assemblaggio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idRicetta;
		
		private int _idMenù;
		
		private EntityRef<Menù> _Menù;
		
		private EntityRef<Ricetta> _Ricetta;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidRicettaChanging(int value);
    partial void OnidRicettaChanged();
    partial void OnidMenùChanging(int value);
    partial void OnidMenùChanged();
    #endregion
		
		public Assemblaggio()
		{
			this._Menù = default(EntityRef<Menù>);
			this._Ricetta = default(EntityRef<Ricetta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRicetta", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idRicetta
		{
			get
			{
				return this._idRicetta;
			}
			set
			{
				if ((this._idRicetta != value))
				{
					if (this._Ricetta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidRicettaChanging(value);
					this.SendPropertyChanging();
					this._idRicetta = value;
					this.SendPropertyChanged("idRicetta");
					this.OnidRicettaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMenù", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idMenù
		{
			get
			{
				return this._idMenù;
			}
			set
			{
				if ((this._idMenù != value))
				{
					if (this._Menù.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidMenùChanging(value);
					this.SendPropertyChanging();
					this._idMenù = value;
					this.SendPropertyChanged("idMenù");
					this.OnidMenùChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menù_Assemblaggio", Storage="_Menù", ThisKey="idMenù", OtherKey="idMenù", IsForeignKey=true)]
		public Menù Menù
		{
			get
			{
				return this._Menù.Entity;
			}
			set
			{
				Menù previousValue = this._Menù.Entity;
				if (((previousValue != value) 
							|| (this._Menù.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Menù.Entity = null;
						previousValue.Assemblaggio.Remove(this);
					}
					this._Menù.Entity = value;
					if ((value != null))
					{
						value.Assemblaggio.Add(this);
						this._idMenù = value.idMenù;
					}
					else
					{
						this._idMenù = default(int);
					}
					this.SendPropertyChanged("Menù");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ricetta_Assemblaggio", Storage="_Ricetta", ThisKey="idRicetta", OtherKey="idRicetta", IsForeignKey=true)]
		public Ricetta Ricetta
		{
			get
			{
				return this._Ricetta.Entity;
			}
			set
			{
				Ricetta previousValue = this._Ricetta.Entity;
				if (((previousValue != value) 
							|| (this._Ricetta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ricetta.Entity = null;
						previousValue.Assemblaggio.Remove(this);
					}
					this._Ricetta.Entity = value;
					if ((value != null))
					{
						value.Assemblaggio.Add(this);
						this._idRicetta = value.idRicetta;
					}
					else
					{
						this._idRicetta = default(int);
					}
					this.SendPropertyChanged("Ricetta");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Caratteristica")]
	public partial class Caratteristica : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idCaratteristica;
		
		private string _Nome;
		
		private string _Descrizione;
		
		private EntitySet<Caratterizzante> _Caratterizzante;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCaratteristicaChanging(int value);
    partial void OnidCaratteristicaChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    #endregion
		
		public Caratteristica()
		{
			this._Caratterizzante = new EntitySet<Caratterizzante>(new Action<Caratterizzante>(this.attach_Caratterizzante), new Action<Caratterizzante>(this.detach_Caratterizzante));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCaratteristica", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idCaratteristica
		{
			get
			{
				return this._idCaratteristica;
			}
			set
			{
				if ((this._idCaratteristica != value))
				{
					this.OnidCaratteristicaChanging(value);
					this.SendPropertyChanging();
					this._idCaratteristica = value;
					this.SendPropertyChanged("idCaratteristica");
					this.OnidCaratteristicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Caratteristica_Caratterizzante", Storage="_Caratterizzante", ThisKey="idCaratteristica", OtherKey="idCaratteristica")]
		public EntitySet<Caratterizzante> Caratterizzante
		{
			get
			{
				return this._Caratterizzante;
			}
			set
			{
				this._Caratterizzante.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Caratterizzante(Caratterizzante entity)
		{
			this.SendPropertyChanging();
			entity.Caratteristica = this;
		}
		
		private void detach_Caratterizzante(Caratterizzante entity)
		{
			this.SendPropertyChanging();
			entity.Caratteristica = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Caratterizzante")]
	public partial class Caratterizzante : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idIngrediente;
		
		private int _idCaratteristica;
		
		private EntityRef<Caratteristica> _Caratteristica;
		
		private EntityRef<Ingrediente> _Ingrediente;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidIngredienteChanging(int value);
    partial void OnidIngredienteChanged();
    partial void OnidCaratteristicaChanging(int value);
    partial void OnidCaratteristicaChanged();
    #endregion
		
		public Caratterizzante()
		{
			this._Caratteristica = default(EntityRef<Caratteristica>);
			this._Ingrediente = default(EntityRef<Ingrediente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idIngrediente", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idIngrediente
		{
			get
			{
				return this._idIngrediente;
			}
			set
			{
				if ((this._idIngrediente != value))
				{
					if (this._Ingrediente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidIngredienteChanging(value);
					this.SendPropertyChanging();
					this._idIngrediente = value;
					this.SendPropertyChanged("idIngrediente");
					this.OnidIngredienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCaratteristica", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idCaratteristica
		{
			get
			{
				return this._idCaratteristica;
			}
			set
			{
				if ((this._idCaratteristica != value))
				{
					if (this._Caratteristica.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCaratteristicaChanging(value);
					this.SendPropertyChanging();
					this._idCaratteristica = value;
					this.SendPropertyChanged("idCaratteristica");
					this.OnidCaratteristicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Caratteristica_Caratterizzante", Storage="_Caratteristica", ThisKey="idCaratteristica", OtherKey="idCaratteristica", IsForeignKey=true)]
		public Caratteristica Caratteristica
		{
			get
			{
				return this._Caratteristica.Entity;
			}
			set
			{
				Caratteristica previousValue = this._Caratteristica.Entity;
				if (((previousValue != value) 
							|| (this._Caratteristica.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Caratteristica.Entity = null;
						previousValue.Caratterizzante.Remove(this);
					}
					this._Caratteristica.Entity = value;
					if ((value != null))
					{
						value.Caratterizzante.Add(this);
						this._idCaratteristica = value.idCaratteristica;
					}
					else
					{
						this._idCaratteristica = default(int);
					}
					this.SendPropertyChanged("Caratteristica");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ingrediente_Caratterizzante", Storage="_Ingrediente", ThisKey="idIngrediente", OtherKey="idIngrediente", IsForeignKey=true)]
		public Ingrediente Ingrediente
		{
			get
			{
				return this._Ingrediente.Entity;
			}
			set
			{
				Ingrediente previousValue = this._Ingrediente.Entity;
				if (((previousValue != value) 
							|| (this._Ingrediente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ingrediente.Entity = null;
						previousValue.Caratterizzante.Remove(this);
					}
					this._Ingrediente.Entity = value;
					if ((value != null))
					{
						value.Caratterizzante.Add(this);
						this._idIngrediente = value.idIngrediente;
					}
					else
					{
						this._idIngrediente = default(int);
					}
					this.SendPropertyChanged("Ingrediente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categoria")]
	public partial class Categoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Nome;
		
		private string _Descrizione;
		
		private EntitySet<Ingrediente> _Ingrediente;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    #endregion
		
		public Categoria()
		{
			this._Ingrediente = new EntitySet<Ingrediente>(new Action<Ingrediente>(this.attach_Ingrediente), new Action<Ingrediente>(this.detach_Ingrediente));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_Ingrediente", Storage="_Ingrediente", ThisKey="Nome", OtherKey="NomeCat")]
		public EntitySet<Ingrediente> Ingrediente
		{
			get
			{
				return this._Ingrediente;
			}
			set
			{
				this._Ingrediente.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ingrediente(Ingrediente entity)
		{
			this.SendPropertyChanging();
			entity.Categoria = this;
		}
		
		private void detach_Ingrediente(Ingrediente entity)
		{
			this.SendPropertyChanging();
			entity.Categoria = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Consumo")]
	public partial class Consumo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idIngrediente;
		
		private string _NomeUDM;
		
		private int _idRicetta;
		
		private int _idRicettaStrum;
		
		private string _NomeStep;
		
		private int _Quantità;
		
		private EntityRef<IngrUDM> _IngrUDM;
		
		private EntityRef<Step> _Step;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidIngredienteChanging(int value);
    partial void OnidIngredienteChanged();
    partial void OnNomeUDMChanging(string value);
    partial void OnNomeUDMChanged();
    partial void OnidRicettaChanging(int value);
    partial void OnidRicettaChanged();
    partial void OnidRicettaStrumChanging(int value);
    partial void OnidRicettaStrumChanged();
    partial void OnNomeStepChanging(string value);
    partial void OnNomeStepChanged();
    partial void OnQuantitàChanging(int value);
    partial void OnQuantitàChanged();
    #endregion
		
		public Consumo()
		{
			this._IngrUDM = default(EntityRef<IngrUDM>);
			this._Step = default(EntityRef<Step>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idIngrediente", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idIngrediente
		{
			get
			{
				return this._idIngrediente;
			}
			set
			{
				if ((this._idIngrediente != value))
				{
					if (this._IngrUDM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidIngredienteChanging(value);
					this.SendPropertyChanging();
					this._idIngrediente = value;
					this.SendPropertyChanged("idIngrediente");
					this.OnidIngredienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomeUDM", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NomeUDM
		{
			get
			{
				return this._NomeUDM;
			}
			set
			{
				if ((this._NomeUDM != value))
				{
					if (this._IngrUDM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNomeUDMChanging(value);
					this.SendPropertyChanging();
					this._NomeUDM = value;
					this.SendPropertyChanged("NomeUDM");
					this.OnNomeUDMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRicetta", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idRicetta
		{
			get
			{
				return this._idRicetta;
			}
			set
			{
				if ((this._idRicetta != value))
				{
					if (this._Step.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidRicettaChanging(value);
					this.SendPropertyChanging();
					this._idRicetta = value;
					this.SendPropertyChanged("idRicetta");
					this.OnidRicettaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRicettaStrum", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idRicettaStrum
		{
			get
			{
				return this._idRicettaStrum;
			}
			set
			{
				if ((this._idRicettaStrum != value))
				{
					if (this._Step.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidRicettaStrumChanging(value);
					this.SendPropertyChanging();
					this._idRicettaStrum = value;
					this.SendPropertyChanged("idRicettaStrum");
					this.OnidRicettaStrumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomeStep", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NomeStep
		{
			get
			{
				return this._NomeStep;
			}
			set
			{
				if ((this._NomeStep != value))
				{
					if (this._Step.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNomeStepChanging(value);
					this.SendPropertyChanging();
					this._NomeStep = value;
					this.SendPropertyChanged("NomeStep");
					this.OnNomeStepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantità", DbType="Int NOT NULL")]
		public int Quantità
		{
			get
			{
				return this._Quantità;
			}
			set
			{
				if ((this._Quantità != value))
				{
					this.OnQuantitàChanging(value);
					this.SendPropertyChanging();
					this._Quantità = value;
					this.SendPropertyChanged("Quantità");
					this.OnQuantitàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IngrUDM_Consumo", Storage="_IngrUDM", ThisKey="idIngrediente,NomeUDM", OtherKey="idIngrediente,NomeUDM", IsForeignKey=true)]
		public IngrUDM IngrUDM
		{
			get
			{
				return this._IngrUDM.Entity;
			}
			set
			{
				IngrUDM previousValue = this._IngrUDM.Entity;
				if (((previousValue != value) 
							|| (this._IngrUDM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IngrUDM.Entity = null;
						previousValue.Consumo.Remove(this);
					}
					this._IngrUDM.Entity = value;
					if ((value != null))
					{
						value.Consumo.Add(this);
						this._idIngrediente = value.idIngrediente;
						this._NomeUDM = value.NomeUDM;
					}
					else
					{
						this._idIngrediente = default(int);
						this._NomeUDM = default(string);
					}
					this.SendPropertyChanged("IngrUDM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Step_Consumo", Storage="_Step", ThisKey="idRicetta,idRicettaStrum,NomeStep", OtherKey="idRicetta,idRicettaStrum,Nome", IsForeignKey=true)]
		public Step Step
		{
			get
			{
				return this._Step.Entity;
			}
			set
			{
				Step previousValue = this._Step.Entity;
				if (((previousValue != value) 
							|| (this._Step.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Step.Entity = null;
						previousValue.Consumo.Remove(this);
					}
					this._Step.Entity = value;
					if ((value != null))
					{
						value.Consumo.Add(this);
						this._idRicetta = value.idRicetta;
						this._idRicettaStrum = value.idRicettaStrum;
						this._NomeStep = value.Nome;
					}
					else
					{
						this._idRicetta = default(int);
						this._idRicettaStrum = default(int);
						this._NomeStep = default(string);
					}
					this.SendPropertyChanged("Step");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ingrediente")]
	public partial class Ingrediente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idIngrediente;
		
		private string _Nome;
		
		private string _NomeCat;
		
		private EntitySet<Alternativo> _Alternativo;
		
		private EntitySet<Alternativo> _Alternativo1;
		
		private EntitySet<Caratterizzante> _Caratterizzante;
		
		private EntitySet<IngrUDM> _IngrUDM;
		
		private EntityRef<Categoria> _Categoria;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidIngredienteChanging(int value);
    partial void OnidIngredienteChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnNomeCatChanging(string value);
    partial void OnNomeCatChanged();
    #endregion
		
		public Ingrediente()
		{
			this._Alternativo = new EntitySet<Alternativo>(new Action<Alternativo>(this.attach_Alternativo), new Action<Alternativo>(this.detach_Alternativo));
			this._Alternativo1 = new EntitySet<Alternativo>(new Action<Alternativo>(this.attach_Alternativo1), new Action<Alternativo>(this.detach_Alternativo1));
			this._Caratterizzante = new EntitySet<Caratterizzante>(new Action<Caratterizzante>(this.attach_Caratterizzante), new Action<Caratterizzante>(this.detach_Caratterizzante));
			this._IngrUDM = new EntitySet<IngrUDM>(new Action<IngrUDM>(this.attach_IngrUDM), new Action<IngrUDM>(this.detach_IngrUDM));
			this._Categoria = default(EntityRef<Categoria>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idIngrediente", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idIngrediente
		{
			get
			{
				return this._idIngrediente;
			}
			set
			{
				if ((this._idIngrediente != value))
				{
					this.OnidIngredienteChanging(value);
					this.SendPropertyChanging();
					this._idIngrediente = value;
					this.SendPropertyChanged("idIngrediente");
					this.OnidIngredienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomeCat", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NomeCat
		{
			get
			{
				return this._NomeCat;
			}
			set
			{
				if ((this._NomeCat != value))
				{
					if (this._Categoria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNomeCatChanging(value);
					this.SendPropertyChanging();
					this._NomeCat = value;
					this.SendPropertyChanged("NomeCat");
					this.OnNomeCatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ingrediente_Alternativo", Storage="_Alternativo", ThisKey="idIngrediente", OtherKey="idIngrediente")]
		public EntitySet<Alternativo> Alternativo
		{
			get
			{
				return this._Alternativo;
			}
			set
			{
				this._Alternativo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ingrediente_Alternativo1", Storage="_Alternativo1", ThisKey="idIngrediente", OtherKey="AltIdIngrediente")]
		public EntitySet<Alternativo> Alternativo1
		{
			get
			{
				return this._Alternativo1;
			}
			set
			{
				this._Alternativo1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ingrediente_Caratterizzante", Storage="_Caratterizzante", ThisKey="idIngrediente", OtherKey="idIngrediente")]
		public EntitySet<Caratterizzante> Caratterizzante
		{
			get
			{
				return this._Caratterizzante;
			}
			set
			{
				this._Caratterizzante.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ingrediente_IngrUDM", Storage="_IngrUDM", ThisKey="idIngrediente", OtherKey="idIngrediente")]
		public EntitySet<IngrUDM> IngrUDM
		{
			get
			{
				return this._IngrUDM;
			}
			set
			{
				this._IngrUDM.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_Ingrediente", Storage="_Categoria", ThisKey="NomeCat", OtherKey="Nome", IsForeignKey=true)]
		public Categoria Categoria
		{
			get
			{
				return this._Categoria.Entity;
			}
			set
			{
				Categoria previousValue = this._Categoria.Entity;
				if (((previousValue != value) 
							|| (this._Categoria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Categoria.Entity = null;
						previousValue.Ingrediente.Remove(this);
					}
					this._Categoria.Entity = value;
					if ((value != null))
					{
						value.Ingrediente.Add(this);
						this._NomeCat = value.Nome;
					}
					else
					{
						this._NomeCat = default(string);
					}
					this.SendPropertyChanged("Categoria");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Alternativo(Alternativo entity)
		{
			this.SendPropertyChanging();
			entity.Ingrediente = this;
		}
		
		private void detach_Alternativo(Alternativo entity)
		{
			this.SendPropertyChanging();
			entity.Ingrediente = null;
		}
		
		private void attach_Alternativo1(Alternativo entity)
		{
			this.SendPropertyChanging();
			entity.Ingrediente1 = this;
		}
		
		private void detach_Alternativo1(Alternativo entity)
		{
			this.SendPropertyChanging();
			entity.Ingrediente1 = null;
		}
		
		private void attach_Caratterizzante(Caratterizzante entity)
		{
			this.SendPropertyChanging();
			entity.Ingrediente = this;
		}
		
		private void detach_Caratterizzante(Caratterizzante entity)
		{
			this.SendPropertyChanging();
			entity.Ingrediente = null;
		}
		
		private void attach_IngrUDM(IngrUDM entity)
		{
			this.SendPropertyChanging();
			entity.Ingrediente = this;
		}
		
		private void detach_IngrUDM(IngrUDM entity)
		{
			this.SendPropertyChanging();
			entity.Ingrediente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IngrUDM")]
	public partial class IngrUDM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idIngrediente;
		
		private string _NomeUDM;
		
		private int _kcalPerUnità;
		
		private EntitySet<Consumo> _Consumo;
		
		private EntityRef<Ingrediente> _Ingrediente;
		
		private EntityRef<UnitàDiMisura> _UnitàDiMisura;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidIngredienteChanging(int value);
    partial void OnidIngredienteChanged();
    partial void OnNomeUDMChanging(string value);
    partial void OnNomeUDMChanged();
    partial void OnkcalPerUnitàChanging(int value);
    partial void OnkcalPerUnitàChanged();
    #endregion
		
		public IngrUDM()
		{
			this._Consumo = new EntitySet<Consumo>(new Action<Consumo>(this.attach_Consumo), new Action<Consumo>(this.detach_Consumo));
			this._Ingrediente = default(EntityRef<Ingrediente>);
			this._UnitàDiMisura = default(EntityRef<UnitàDiMisura>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idIngrediente", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idIngrediente
		{
			get
			{
				return this._idIngrediente;
			}
			set
			{
				if ((this._idIngrediente != value))
				{
					if (this._Ingrediente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidIngredienteChanging(value);
					this.SendPropertyChanging();
					this._idIngrediente = value;
					this.SendPropertyChanged("idIngrediente");
					this.OnidIngredienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomeUDM", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NomeUDM
		{
			get
			{
				return this._NomeUDM;
			}
			set
			{
				if ((this._NomeUDM != value))
				{
					if (this._UnitàDiMisura.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNomeUDMChanging(value);
					this.SendPropertyChanging();
					this._NomeUDM = value;
					this.SendPropertyChanged("NomeUDM");
					this.OnNomeUDMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kcalPerUnità", DbType="Int NOT NULL")]
		public int kcalPerUnità
		{
			get
			{
				return this._kcalPerUnità;
			}
			set
			{
				if ((this._kcalPerUnità != value))
				{
					this.OnkcalPerUnitàChanging(value);
					this.SendPropertyChanging();
					this._kcalPerUnità = value;
					this.SendPropertyChanged("kcalPerUnità");
					this.OnkcalPerUnitàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IngrUDM_Consumo", Storage="_Consumo", ThisKey="idIngrediente,NomeUDM", OtherKey="idIngrediente,NomeUDM")]
		public EntitySet<Consumo> Consumo
		{
			get
			{
				return this._Consumo;
			}
			set
			{
				this._Consumo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ingrediente_IngrUDM", Storage="_Ingrediente", ThisKey="idIngrediente", OtherKey="idIngrediente", IsForeignKey=true)]
		public Ingrediente Ingrediente
		{
			get
			{
				return this._Ingrediente.Entity;
			}
			set
			{
				Ingrediente previousValue = this._Ingrediente.Entity;
				if (((previousValue != value) 
							|| (this._Ingrediente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ingrediente.Entity = null;
						previousValue.IngrUDM.Remove(this);
					}
					this._Ingrediente.Entity = value;
					if ((value != null))
					{
						value.IngrUDM.Add(this);
						this._idIngrediente = value.idIngrediente;
					}
					else
					{
						this._idIngrediente = default(int);
					}
					this.SendPropertyChanged("Ingrediente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitàDiMisura_IngrUDM", Storage="_UnitàDiMisura", ThisKey="NomeUDM", OtherKey="Nome", IsForeignKey=true)]
		public UnitàDiMisura UnitàDiMisura
		{
			get
			{
				return this._UnitàDiMisura.Entity;
			}
			set
			{
				UnitàDiMisura previousValue = this._UnitàDiMisura.Entity;
				if (((previousValue != value) 
							|| (this._UnitàDiMisura.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UnitàDiMisura.Entity = null;
						previousValue.IngrUDM.Remove(this);
					}
					this._UnitàDiMisura.Entity = value;
					if ((value != null))
					{
						value.IngrUDM.Add(this);
						this._NomeUDM = value.Nome;
					}
					else
					{
						this._NomeUDM = default(string);
					}
					this.SendPropertyChanged("UnitàDiMisura");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Consumo(Consumo entity)
		{
			this.SendPropertyChanging();
			entity.IngrUDM = this;
		}
		
		private void detach_Consumo(Consumo entity)
		{
			this.SendPropertyChanging();
			entity.IngrUDM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Menù")]
	public partial class Menù : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Nome;
		
		private string _Tipo;
		
		private int _idMenù;
		
		private EntitySet<Assemblaggio> _Assemblaggio;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnTipoChanging(string value);
    partial void OnTipoChanged();
    partial void OnidMenùChanging(int value);
    partial void OnidMenùChanged();
    #endregion
		
		public Menù()
		{
			this._Assemblaggio = new EntitySet<Assemblaggio>(new Action<Assemblaggio>(this.attach_Assemblaggio), new Action<Assemblaggio>(this.detach_Assemblaggio));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMenù", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idMenù
		{
			get
			{
				return this._idMenù;
			}
			set
			{
				if ((this._idMenù != value))
				{
					this.OnidMenùChanging(value);
					this.SendPropertyChanging();
					this._idMenù = value;
					this.SendPropertyChanged("idMenù");
					this.OnidMenùChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menù_Assemblaggio", Storage="_Assemblaggio", ThisKey="idMenù", OtherKey="idMenù")]
		public EntitySet<Assemblaggio> Assemblaggio
		{
			get
			{
				return this._Assemblaggio;
			}
			set
			{
				this._Assemblaggio.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Assemblaggio(Assemblaggio entity)
		{
			this.SendPropertyChanging();
			entity.Menù = this;
		}
		
		private void detach_Assemblaggio(Assemblaggio entity)
		{
			this.SendPropertyChanging();
			entity.Menù = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Portata")]
	public partial class Portata : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Nome;
		
		private EntitySet<Ricetta> _Ricetta;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    #endregion
		
		public Portata()
		{
			this._Ricetta = new EntitySet<Ricetta>(new Action<Ricetta>(this.attach_Ricetta), new Action<Ricetta>(this.detach_Ricetta));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portata_Ricetta", Storage="_Ricetta", ThisKey="Nome", OtherKey="portata")]
		public EntitySet<Ricetta> Ricetta
		{
			get
			{
				return this._Ricetta;
			}
			set
			{
				this._Ricetta.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ricetta(Ricetta entity)
		{
			this.SendPropertyChanging();
			entity.Portata1 = this;
		}
		
		private void detach_Ricetta(Ricetta entity)
		{
			this.SendPropertyChanging();
			entity.Portata1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ricetta")]
	public partial class Ricetta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idRicetta;
		
		private string _Nome;
		
		private string _Descrizione;
		
		private string _Immagine;
		
		private int _TCottura;
		
		private int _TPreparazione;
		
		private int _Difficoltà;
		
		private int _Persone;
		
		private string _portata;
		
		private EntitySet<Assemblaggio> _Assemblaggio;
		
		private EntitySet<RicettaStrumento> _RicettaStrumento;
		
		private EntityRef<Portata> _Portata1;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidRicettaChanging(int value);
    partial void OnidRicettaChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    partial void OnImmagineChanging(string value);
    partial void OnImmagineChanged();
    partial void OnTCotturaChanging(int value);
    partial void OnTCotturaChanged();
    partial void OnTPreparazioneChanging(int value);
    partial void OnTPreparazioneChanged();
    partial void OnDifficoltàChanging(int value);
    partial void OnDifficoltàChanged();
    partial void OnPersoneChanging(int value);
    partial void OnPersoneChanged();
    partial void OnportataChanging(string value);
    partial void OnportataChanged();
    #endregion
		
		public Ricetta()
		{
			this._Assemblaggio = new EntitySet<Assemblaggio>(new Action<Assemblaggio>(this.attach_Assemblaggio), new Action<Assemblaggio>(this.detach_Assemblaggio));
			this._RicettaStrumento = new EntitySet<RicettaStrumento>(new Action<RicettaStrumento>(this.attach_RicettaStrumento), new Action<RicettaStrumento>(this.detach_RicettaStrumento));
			this._Portata1 = default(EntityRef<Portata>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRicetta", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idRicetta
		{
			get
			{
				return this._idRicetta;
			}
			set
			{
				if ((this._idRicetta != value))
				{
					this.OnidRicettaChanging(value);
					this.SendPropertyChanging();
					this._idRicetta = value;
					this.SendPropertyChanged("idRicetta");
					this.OnidRicettaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Immagine", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Immagine
		{
			get
			{
				return this._Immagine;
			}
			set
			{
				if ((this._Immagine != value))
				{
					this.OnImmagineChanging(value);
					this.SendPropertyChanging();
					this._Immagine = value;
					this.SendPropertyChanged("Immagine");
					this.OnImmagineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCottura", DbType="Int NOT NULL")]
		public int TCottura
		{
			get
			{
				return this._TCottura;
			}
			set
			{
				if ((this._TCottura != value))
				{
					this.OnTCotturaChanging(value);
					this.SendPropertyChanging();
					this._TCottura = value;
					this.SendPropertyChanged("TCottura");
					this.OnTCotturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TPreparazione", DbType="Int NOT NULL")]
		public int TPreparazione
		{
			get
			{
				return this._TPreparazione;
			}
			set
			{
				if ((this._TPreparazione != value))
				{
					this.OnTPreparazioneChanging(value);
					this.SendPropertyChanging();
					this._TPreparazione = value;
					this.SendPropertyChanged("TPreparazione");
					this.OnTPreparazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Difficoltà", DbType="Int NOT NULL")]
		public int Difficoltà
		{
			get
			{
				return this._Difficoltà;
			}
			set
			{
				if ((this._Difficoltà != value))
				{
					this.OnDifficoltàChanging(value);
					this.SendPropertyChanging();
					this._Difficoltà = value;
					this.SendPropertyChanged("Difficoltà");
					this.OnDifficoltàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Persone", DbType="Int NOT NULL")]
		public int Persone
		{
			get
			{
				return this._Persone;
			}
			set
			{
				if ((this._Persone != value))
				{
					this.OnPersoneChanging(value);
					this.SendPropertyChanging();
					this._Persone = value;
					this.SendPropertyChanged("Persone");
					this.OnPersoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_portata", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string portata
		{
			get
			{
				return this._portata;
			}
			set
			{
				if ((this._portata != value))
				{
					if (this._Portata1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnportataChanging(value);
					this.SendPropertyChanging();
					this._portata = value;
					this.SendPropertyChanged("portata");
					this.OnportataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ricetta_Assemblaggio", Storage="_Assemblaggio", ThisKey="idRicetta", OtherKey="idRicetta")]
		public EntitySet<Assemblaggio> Assemblaggio
		{
			get
			{
				return this._Assemblaggio;
			}
			set
			{
				this._Assemblaggio.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ricetta_RicettaStrumento", Storage="_RicettaStrumento", ThisKey="idRicetta", OtherKey="idRicetta")]
		public EntitySet<RicettaStrumento> RicettaStrumento
		{
			get
			{
				return this._RicettaStrumento;
			}
			set
			{
				this._RicettaStrumento.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Portata_Ricetta", Storage="_Portata1", ThisKey="portata", OtherKey="Nome", IsForeignKey=true)]
		public Portata Portata1
		{
			get
			{
				return this._Portata1.Entity;
			}
			set
			{
				Portata previousValue = this._Portata1.Entity;
				if (((previousValue != value) 
							|| (this._Portata1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Portata1.Entity = null;
						previousValue.Ricetta.Remove(this);
					}
					this._Portata1.Entity = value;
					if ((value != null))
					{
						value.Ricetta.Add(this);
						this._portata = value.Nome;
					}
					else
					{
						this._portata = default(string);
					}
					this.SendPropertyChanged("Portata1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Assemblaggio(Assemblaggio entity)
		{
			this.SendPropertyChanging();
			entity.Ricetta = this;
		}
		
		private void detach_Assemblaggio(Assemblaggio entity)
		{
			this.SendPropertyChanging();
			entity.Ricetta = null;
		}
		
		private void attach_RicettaStrumento(RicettaStrumento entity)
		{
			this.SendPropertyChanging();
			entity.Ricetta = this;
		}
		
		private void detach_RicettaStrumento(RicettaStrumento entity)
		{
			this.SendPropertyChanging();
			entity.Ricetta = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RicettaStrumento")]
	public partial class RicettaStrumento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idRicetta;
		
		private int _Kcal;
		
		private int _idRicettaStrum;
		
		private EntitySet<Step> _Step;
		
		private EntitySet<Utilizzo> _Utilizzo;
		
		private EntityRef<Ricetta> _Ricetta;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidRicettaChanging(int value);
    partial void OnidRicettaChanged();
    partial void OnKcalChanging(int value);
    partial void OnKcalChanged();
    partial void OnidRicettaStrumChanging(int value);
    partial void OnidRicettaStrumChanged();
    #endregion
		
		public RicettaStrumento()
		{
			this._Step = new EntitySet<Step>(new Action<Step>(this.attach_Step), new Action<Step>(this.detach_Step));
			this._Utilizzo = new EntitySet<Utilizzo>(new Action<Utilizzo>(this.attach_Utilizzo), new Action<Utilizzo>(this.detach_Utilizzo));
			this._Ricetta = default(EntityRef<Ricetta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRicetta", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idRicetta
		{
			get
			{
				return this._idRicetta;
			}
			set
			{
				if ((this._idRicetta != value))
				{
					if (this._Ricetta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidRicettaChanging(value);
					this.SendPropertyChanging();
					this._idRicetta = value;
					this.SendPropertyChanged("idRicetta");
					this.OnidRicettaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kcal", DbType="Int NOT NULL")]
		public int Kcal
		{
			get
			{
				return this._Kcal;
			}
			set
			{
				if ((this._Kcal != value))
				{
					this.OnKcalChanging(value);
					this.SendPropertyChanging();
					this._Kcal = value;
					this.SendPropertyChanged("Kcal");
					this.OnKcalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRicettaStrum", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idRicettaStrum
		{
			get
			{
				return this._idRicettaStrum;
			}
			set
			{
				if ((this._idRicettaStrum != value))
				{
					this.OnidRicettaStrumChanging(value);
					this.SendPropertyChanging();
					this._idRicettaStrum = value;
					this.SendPropertyChanged("idRicettaStrum");
					this.OnidRicettaStrumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RicettaStrumento_Step", Storage="_Step", ThisKey="idRicetta,idRicettaStrum", OtherKey="idRicetta,idRicettaStrum")]
		public EntitySet<Step> Step
		{
			get
			{
				return this._Step;
			}
			set
			{
				this._Step.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RicettaStrumento_Utilizzo", Storage="_Utilizzo", ThisKey="idRicetta,idRicettaStrum", OtherKey="idRicetta,idRicettaStrum")]
		public EntitySet<Utilizzo> Utilizzo
		{
			get
			{
				return this._Utilizzo;
			}
			set
			{
				this._Utilizzo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ricetta_RicettaStrumento", Storage="_Ricetta", ThisKey="idRicetta", OtherKey="idRicetta", IsForeignKey=true)]
		public Ricetta Ricetta
		{
			get
			{
				return this._Ricetta.Entity;
			}
			set
			{
				Ricetta previousValue = this._Ricetta.Entity;
				if (((previousValue != value) 
							|| (this._Ricetta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ricetta.Entity = null;
						previousValue.RicettaStrumento.Remove(this);
					}
					this._Ricetta.Entity = value;
					if ((value != null))
					{
						value.RicettaStrumento.Add(this);
						this._idRicetta = value.idRicetta;
					}
					else
					{
						this._idRicetta = default(int);
					}
					this.SendPropertyChanged("Ricetta");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Step(Step entity)
		{
			this.SendPropertyChanging();
			entity.RicettaStrumento = this;
		}
		
		private void detach_Step(Step entity)
		{
			this.SendPropertyChanging();
			entity.RicettaStrumento = null;
		}
		
		private void attach_Utilizzo(Utilizzo entity)
		{
			this.SendPropertyChanging();
			entity.RicettaStrumento = this;
		}
		
		private void detach_Utilizzo(Utilizzo entity)
		{
			this.SendPropertyChanging();
			entity.RicettaStrumento = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Step")]
	public partial class Step : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idRicetta;
		
		private int _idRicettaStrum;
		
		private string _Nome;
		
		private string _Descrizione;
		
		private string _Immagine;
		
		private int _NumOrdine;
		
		private EntitySet<Consumo> _Consumo;
		
		private EntitySet<Uso> _Uso;
		
		private EntityRef<RicettaStrumento> _RicettaStrumento;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidRicettaChanging(int value);
    partial void OnidRicettaChanged();
    partial void OnidRicettaStrumChanging(int value);
    partial void OnidRicettaStrumChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    partial void OnImmagineChanging(string value);
    partial void OnImmagineChanged();
    partial void OnNumOrdineChanging(int value);
    partial void OnNumOrdineChanged();
    #endregion
		
		public Step()
		{
			this._Consumo = new EntitySet<Consumo>(new Action<Consumo>(this.attach_Consumo), new Action<Consumo>(this.detach_Consumo));
			this._Uso = new EntitySet<Uso>(new Action<Uso>(this.attach_Uso), new Action<Uso>(this.detach_Uso));
			this._RicettaStrumento = default(EntityRef<RicettaStrumento>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRicetta", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idRicetta
		{
			get
			{
				return this._idRicetta;
			}
			set
			{
				if ((this._idRicetta != value))
				{
					if (this._RicettaStrumento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidRicettaChanging(value);
					this.SendPropertyChanging();
					this._idRicetta = value;
					this.SendPropertyChanged("idRicetta");
					this.OnidRicettaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRicettaStrum", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idRicettaStrum
		{
			get
			{
				return this._idRicettaStrum;
			}
			set
			{
				if ((this._idRicettaStrum != value))
				{
					if (this._RicettaStrumento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidRicettaStrumChanging(value);
					this.SendPropertyChanging();
					this._idRicettaStrum = value;
					this.SendPropertyChanged("idRicettaStrum");
					this.OnidRicettaStrumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Immagine", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Immagine
		{
			get
			{
				return this._Immagine;
			}
			set
			{
				if ((this._Immagine != value))
				{
					this.OnImmagineChanging(value);
					this.SendPropertyChanging();
					this._Immagine = value;
					this.SendPropertyChanged("Immagine");
					this.OnImmagineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumOrdine", DbType="Int NOT NULL")]
		public int NumOrdine
		{
			get
			{
				return this._NumOrdine;
			}
			set
			{
				if ((this._NumOrdine != value))
				{
					this.OnNumOrdineChanging(value);
					this.SendPropertyChanging();
					this._NumOrdine = value;
					this.SendPropertyChanged("NumOrdine");
					this.OnNumOrdineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Step_Consumo", Storage="_Consumo", ThisKey="idRicetta,idRicettaStrum,Nome", OtherKey="idRicetta,idRicettaStrum,NomeStep")]
		public EntitySet<Consumo> Consumo
		{
			get
			{
				return this._Consumo;
			}
			set
			{
				this._Consumo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Step_Uso", Storage="_Uso", ThisKey="idRicetta,idRicettaStrum,Nome", OtherKey="idRicetta,idRicettaStrum,NomeStep")]
		public EntitySet<Uso> Uso
		{
			get
			{
				return this._Uso;
			}
			set
			{
				this._Uso.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RicettaStrumento_Step", Storage="_RicettaStrumento", ThisKey="idRicetta,idRicettaStrum", OtherKey="idRicetta,idRicettaStrum", IsForeignKey=true)]
		public RicettaStrumento RicettaStrumento
		{
			get
			{
				return this._RicettaStrumento.Entity;
			}
			set
			{
				RicettaStrumento previousValue = this._RicettaStrumento.Entity;
				if (((previousValue != value) 
							|| (this._RicettaStrumento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RicettaStrumento.Entity = null;
						previousValue.Step.Remove(this);
					}
					this._RicettaStrumento.Entity = value;
					if ((value != null))
					{
						value.Step.Add(this);
						this._idRicetta = value.idRicetta;
						this._idRicettaStrum = value.idRicettaStrum;
					}
					else
					{
						this._idRicetta = default(int);
						this._idRicettaStrum = default(int);
					}
					this.SendPropertyChanged("RicettaStrumento");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Consumo(Consumo entity)
		{
			this.SendPropertyChanging();
			entity.Step = this;
		}
		
		private void detach_Consumo(Consumo entity)
		{
			this.SendPropertyChanging();
			entity.Step = null;
		}
		
		private void attach_Uso(Uso entity)
		{
			this.SendPropertyChanging();
			entity.Step = this;
		}
		
		private void detach_Uso(Uso entity)
		{
			this.SendPropertyChanging();
			entity.Step = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Strumento")]
	public partial class Strumento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Immagine;
		
		private string _Nome;
		
		private string _Descrizione;
		
		private string _TipoElettrodom;
		
		private string _Tipo;
		
		private System.Nullable<int> _Potenza;
		
		private int _Prezzo;
		
		private int _idStrumento;
		
		private EntitySet<Uso> _Uso;
		
		private EntitySet<Utilizzo> _Utilizzo;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImmagineChanging(string value);
    partial void OnImmagineChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    partial void OnTipoElettrodomChanging(string value);
    partial void OnTipoElettrodomChanged();
    partial void OnTipoChanging(string value);
    partial void OnTipoChanged();
    partial void OnPotenzaChanging(System.Nullable<int> value);
    partial void OnPotenzaChanged();
    partial void OnPrezzoChanging(int value);
    partial void OnPrezzoChanged();
    partial void OnidStrumentoChanging(int value);
    partial void OnidStrumentoChanged();
    #endregion
		
		public Strumento()
		{
			this._Uso = new EntitySet<Uso>(new Action<Uso>(this.attach_Uso), new Action<Uso>(this.detach_Uso));
			this._Utilizzo = new EntitySet<Utilizzo>(new Action<Utilizzo>(this.attach_Utilizzo), new Action<Utilizzo>(this.detach_Utilizzo));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Immagine", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Immagine
		{
			get
			{
				return this._Immagine;
			}
			set
			{
				if ((this._Immagine != value))
				{
					this.OnImmagineChanging(value);
					this.SendPropertyChanging();
					this._Immagine = value;
					this.SendPropertyChanged("Immagine");
					this.OnImmagineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoElettrodom", DbType="VarChar(20)")]
		public string TipoElettrodom
		{
			get
			{
				return this._TipoElettrodom;
			}
			set
			{
				if ((this._TipoElettrodom != value))
				{
					this.OnTipoElettrodomChanging(value);
					this.SendPropertyChanging();
					this._TipoElettrodom = value;
					this.SendPropertyChanged("TipoElettrodom");
					this.OnTipoElettrodomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Potenza", DbType="Int")]
		public System.Nullable<int> Potenza
		{
			get
			{
				return this._Potenza;
			}
			set
			{
				if ((this._Potenza != value))
				{
					this.OnPotenzaChanging(value);
					this.SendPropertyChanging();
					this._Potenza = value;
					this.SendPropertyChanged("Potenza");
					this.OnPotenzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prezzo", DbType="Int NOT NULL")]
		public int Prezzo
		{
			get
			{
				return this._Prezzo;
			}
			set
			{
				if ((this._Prezzo != value))
				{
					this.OnPrezzoChanging(value);
					this.SendPropertyChanging();
					this._Prezzo = value;
					this.SendPropertyChanged("Prezzo");
					this.OnPrezzoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idStrumento", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idStrumento
		{
			get
			{
				return this._idStrumento;
			}
			set
			{
				if ((this._idStrumento != value))
				{
					this.OnidStrumentoChanging(value);
					this.SendPropertyChanging();
					this._idStrumento = value;
					this.SendPropertyChanged("idStrumento");
					this.OnidStrumentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Strumento_Uso", Storage="_Uso", ThisKey="idStrumento", OtherKey="idStrumento")]
		public EntitySet<Uso> Uso
		{
			get
			{
				return this._Uso;
			}
			set
			{
				this._Uso.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Strumento_Utilizzo", Storage="_Utilizzo", ThisKey="idStrumento", OtherKey="idStrumento")]
		public EntitySet<Utilizzo> Utilizzo
		{
			get
			{
				return this._Utilizzo;
			}
			set
			{
				this._Utilizzo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Uso(Uso entity)
		{
			this.SendPropertyChanging();
			entity.Strumento = this;
		}
		
		private void detach_Uso(Uso entity)
		{
			this.SendPropertyChanging();
			entity.Strumento = null;
		}
		
		private void attach_Utilizzo(Utilizzo entity)
		{
			this.SendPropertyChanging();
			entity.Strumento = this;
		}
		
		private void detach_Utilizzo(Utilizzo entity)
		{
			this.SendPropertyChanging();
			entity.Strumento = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UnitàDiMisura")]
	public partial class UnitàDiMisura : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Nome;
		
		private EntitySet<IngrUDM> _IngrUDM;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    #endregion
		
		public UnitàDiMisura()
		{
			this._IngrUDM = new EntitySet<IngrUDM>(new Action<IngrUDM>(this.attach_IngrUDM), new Action<IngrUDM>(this.detach_IngrUDM));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitàDiMisura_IngrUDM", Storage="_IngrUDM", ThisKey="Nome", OtherKey="NomeUDM")]
		public EntitySet<IngrUDM> IngrUDM
		{
			get
			{
				return this._IngrUDM;
			}
			set
			{
				this._IngrUDM.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_IngrUDM(IngrUDM entity)
		{
			this.SendPropertyChanging();
			entity.UnitàDiMisura = this;
		}
		
		private void detach_IngrUDM(IngrUDM entity)
		{
			this.SendPropertyChanging();
			entity.UnitàDiMisura = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Uso")]
	public partial class Uso : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idStrumento;
		
		private int _idRicetta;
		
		private int _idRicettaStrum;
		
		private string _NomeStep;
		
		private EntityRef<Step> _Step;
		
		private EntityRef<Strumento> _Strumento;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidStrumentoChanging(int value);
    partial void OnidStrumentoChanged();
    partial void OnidRicettaChanging(int value);
    partial void OnidRicettaChanged();
    partial void OnidRicettaStrumChanging(int value);
    partial void OnidRicettaStrumChanged();
    partial void OnNomeStepChanging(string value);
    partial void OnNomeStepChanged();
    #endregion
		
		public Uso()
		{
			this._Step = default(EntityRef<Step>);
			this._Strumento = default(EntityRef<Strumento>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idStrumento", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idStrumento
		{
			get
			{
				return this._idStrumento;
			}
			set
			{
				if ((this._idStrumento != value))
				{
					if (this._Strumento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidStrumentoChanging(value);
					this.SendPropertyChanging();
					this._idStrumento = value;
					this.SendPropertyChanged("idStrumento");
					this.OnidStrumentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRicetta", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idRicetta
		{
			get
			{
				return this._idRicetta;
			}
			set
			{
				if ((this._idRicetta != value))
				{
					if (this._Step.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidRicettaChanging(value);
					this.SendPropertyChanging();
					this._idRicetta = value;
					this.SendPropertyChanged("idRicetta");
					this.OnidRicettaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRicettaStrum", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idRicettaStrum
		{
			get
			{
				return this._idRicettaStrum;
			}
			set
			{
				if ((this._idRicettaStrum != value))
				{
					if (this._Step.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidRicettaStrumChanging(value);
					this.SendPropertyChanging();
					this._idRicettaStrum = value;
					this.SendPropertyChanged("idRicettaStrum");
					this.OnidRicettaStrumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomeStep", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NomeStep
		{
			get
			{
				return this._NomeStep;
			}
			set
			{
				if ((this._NomeStep != value))
				{
					if (this._Step.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNomeStepChanging(value);
					this.SendPropertyChanging();
					this._NomeStep = value;
					this.SendPropertyChanged("NomeStep");
					this.OnNomeStepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Step_Uso", Storage="_Step", ThisKey="idRicetta,idRicettaStrum,NomeStep", OtherKey="idRicetta,idRicettaStrum,Nome", IsForeignKey=true)]
		public Step Step
		{
			get
			{
				return this._Step.Entity;
			}
			set
			{
				Step previousValue = this._Step.Entity;
				if (((previousValue != value) 
							|| (this._Step.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Step.Entity = null;
						previousValue.Uso.Remove(this);
					}
					this._Step.Entity = value;
					if ((value != null))
					{
						value.Uso.Add(this);
						this._idRicetta = value.idRicetta;
						this._idRicettaStrum = value.idRicettaStrum;
						this._NomeStep = value.Nome;
					}
					else
					{
						this._idRicetta = default(int);
						this._idRicettaStrum = default(int);
						this._NomeStep = default(string);
					}
					this.SendPropertyChanged("Step");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Strumento_Uso", Storage="_Strumento", ThisKey="idStrumento", OtherKey="idStrumento", IsForeignKey=true)]
		public Strumento Strumento
		{
			get
			{
				return this._Strumento.Entity;
			}
			set
			{
				Strumento previousValue = this._Strumento.Entity;
				if (((previousValue != value) 
							|| (this._Strumento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Strumento.Entity = null;
						previousValue.Uso.Remove(this);
					}
					this._Strumento.Entity = value;
					if ((value != null))
					{
						value.Uso.Add(this);
						this._idStrumento = value.idStrumento;
					}
					else
					{
						this._idStrumento = default(int);
					}
					this.SendPropertyChanged("Strumento");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Utilizzo")]
	public partial class Utilizzo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idRicetta;
		
		private int _idRicettaStrum;
		
		private int _idStrumento;
		
		private EntityRef<RicettaStrumento> _RicettaStrumento;
		
		private EntityRef<Strumento> _Strumento;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidRicettaChanging(int value);
    partial void OnidRicettaChanged();
    partial void OnidRicettaStrumChanging(int value);
    partial void OnidRicettaStrumChanged();
    partial void OnidStrumentoChanging(int value);
    partial void OnidStrumentoChanged();
    #endregion
		
		public Utilizzo()
		{
			this._RicettaStrumento = default(EntityRef<RicettaStrumento>);
			this._Strumento = default(EntityRef<Strumento>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRicetta", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idRicetta
		{
			get
			{
				return this._idRicetta;
			}
			set
			{
				if ((this._idRicetta != value))
				{
					if (this._RicettaStrumento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidRicettaChanging(value);
					this.SendPropertyChanging();
					this._idRicetta = value;
					this.SendPropertyChanged("idRicetta");
					this.OnidRicettaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRicettaStrum", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idRicettaStrum
		{
			get
			{
				return this._idRicettaStrum;
			}
			set
			{
				if ((this._idRicettaStrum != value))
				{
					if (this._RicettaStrumento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidRicettaStrumChanging(value);
					this.SendPropertyChanging();
					this._idRicettaStrum = value;
					this.SendPropertyChanged("idRicettaStrum");
					this.OnidRicettaStrumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idStrumento", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idStrumento
		{
			get
			{
				return this._idStrumento;
			}
			set
			{
				if ((this._idStrumento != value))
				{
					if (this._Strumento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidStrumentoChanging(value);
					this.SendPropertyChanging();
					this._idStrumento = value;
					this.SendPropertyChanged("idStrumento");
					this.OnidStrumentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RicettaStrumento_Utilizzo", Storage="_RicettaStrumento", ThisKey="idRicetta,idRicettaStrum", OtherKey="idRicetta,idRicettaStrum", IsForeignKey=true)]
		public RicettaStrumento RicettaStrumento
		{
			get
			{
				return this._RicettaStrumento.Entity;
			}
			set
			{
				RicettaStrumento previousValue = this._RicettaStrumento.Entity;
				if (((previousValue != value) 
							|| (this._RicettaStrumento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RicettaStrumento.Entity = null;
						previousValue.Utilizzo.Remove(this);
					}
					this._RicettaStrumento.Entity = value;
					if ((value != null))
					{
						value.Utilizzo.Add(this);
						this._idRicetta = value.idRicetta;
						this._idRicettaStrum = value.idRicettaStrum;
					}
					else
					{
						this._idRicetta = default(int);
						this._idRicettaStrum = default(int);
					}
					this.SendPropertyChanged("RicettaStrumento");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Strumento_Utilizzo", Storage="_Strumento", ThisKey="idStrumento", OtherKey="idStrumento", IsForeignKey=true)]
		public Strumento Strumento
		{
			get
			{
				return this._Strumento.Entity;
			}
			set
			{
				Strumento previousValue = this._Strumento.Entity;
				if (((previousValue != value) 
							|| (this._Strumento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Strumento.Entity = null;
						previousValue.Utilizzo.Remove(this);
					}
					this._Strumento.Entity = value;
					if ((value != null))
					{
						value.Utilizzo.Add(this);
						this._idStrumento = value.idStrumento;
					}
					else
					{
						this._idStrumento = default(int);
					}
					this.SendPropertyChanged("Strumento");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
